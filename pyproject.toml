[tool.poetry]
name = "$$REPO$$"
version = "0.1.0"
description = "$$DESCRIPTION$$"
license = "Apache-2.0"
authors = ["$$OWNER$$"]
readme = "README.md"
packages = [{include = "$$REPO$$"}]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: Apache Software License",
    "Typing :: Typed",
]
keywords = ["$$REPO$$", "typed"]
repository = "https://github.com/$$OWNER$$/$$REPO$$"
documentation = "https://$$OWNER$$.github.io/$$REPO$$/"
include = ["py.typed"] # Typed marker file to indicate package type support

[tool.poetry.dependencies]
python = "^$$PYTHON_VERSION$$"

[tool.poetry.group.dev.dependencies]
black = "^24.4.0"
mkdocs-material = "^9.5.23"
mypy = "^1.9.0"
pylint = "^3.2.1"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"

# See all options with `poetry run pylint --generate-toml-config`
[tool.pylint."messages control"]
# pylint has some insane defaults
# Add problem rules to this list with a comment explaination
disable = [
    "too-few-public-methods", # Sometimes you want a test class with one public method.
    "logging-fstring-interpolation", # f-strings are fast and more readable.
]

[tool.mypy]
strict = true
color_output = true
cache_dir = "/tmp/cache/.mypy_cache"

[tool.coverage.run]
omit = ["__main__.py"] # Exclude files from test coverage

[tool.coverage.report]
exclude_also = [ # Exclude code branches by pattern from test coverage
    'if __name__ == "__main__"',
    ]

[tool.pytest.ini_options]
testpaths = "tests"
cache_dir = "/tmp/cache/.pytest_cache"
# Require 100% coverage, use exclusions above instead of decreasing percent.
addopts = "-vv --cov=$$REPO$$ --cov-report term-missing:skip-covered --cov-fail-under=100"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
